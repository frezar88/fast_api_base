version: '3.7'
services:
  db:
    image: postgres:14.9
    container_name: booking_db
    volumes:
      - postgresdata:/var/lib/postgresql/data
    env_file:
      - .env-non-dev
    ports:
      - "5431:5432"


  redis:
    image: redis:7
    container_name: booking_redis

  booking:
    build:
      context: .
    container_name: booking_app
    env_file:
      - .env-non-dev
    depends_on:
      - db
      - redis
    command: [ "/booking/docker/app.sh" ]
    ports:
      - "8080:8000"

  celery:
    build:
      context: .
    container_name: booking_celery
    command: [ "/booking/docker/celery.sh", "celery" ]
    env_file:
      - .env-non-dev
    depends_on:
      - redis
      - booking

  flower:
    build:
      context: .
    container_name: booking_flower
    command: [ "/booking/docker/celery.sh", "flower" ]
    env_file:
      - .env-non-dev
    depends_on:
      - redis
      - celery
    ports:
      - "5555:5555"

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    volumes:
      - grafanadata:/var/lib/grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=root
      - GF_SECURITY_ADMIN_PASSWORD=41111

volumes:
  postgresdata:
  prometheusdata:
  grafanadata: